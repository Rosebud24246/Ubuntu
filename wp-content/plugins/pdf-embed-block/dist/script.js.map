{"version":3,"file":"script.js","mappings":"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","sources":["webpack://pdf-embed-block/external var \"ReactDOM\"","webpack://pdf-embed-block/./src/Style.js","webpack://pdf-embed-block/external var \"React\"","webpack://pdf-embed-block/./src/ViewSDKClient.js","webpack://pdf-embed-block/./src/Modes/SizedContainer.js","webpack://pdf-embed-block/./src/Modes/InLine.js","webpack://pdf-embed-block/./src/PDFEmbed.js","webpack://pdf-embed-block/./src/script.js"],"sourcesContent":["var __WEBPACK_NAMESPACE_OBJECT__ = ReactDOM;","const Style = ({ attributes, clientId }) => {\n\tconst { alignment, width, height } = attributes;\n\n\treturn <style dangerouslySetInnerHTML={{\n\t\t__html: `\n\t\t#pebPDFEmbed-${clientId} .pebPDFEmbed{\n\t\t\ttext-align: ${alignment};\n\t\t}\n\t\t#pebPDFEmbed-${clientId} .pebPDFEmbed .pebSizedContainer{\n\t\t\twidth: ${'0px' === width || '0%' === width || '0em' === width ? 'auto' : width};\n\t\t\theight: ${'0px' === height || '0vh' === height || '0em' === height ? 'auto' : height};\n\t\t}\n\t\t#pebPDFEmbed-${clientId} .pebPDFEmbed .pebInLine{\n\t\t\twidth: ${'0px' === width || '0%' === width || '0em' === width ? 'auto' : width};\n\t\t}\n\t`}} />;\n}\nexport default Style;","var __WEBPACK_NAMESPACE_OBJECT__ = React;","class ViewSDKClient {\r\n\tconstructor() {\r\n\t\tthis.readyPromise = new Promise(resolve => {\r\n\t\t\tif (window.AdobeDC) {\r\n\t\t\t\tresolve();\r\n\t\t\t} else {\r\n\t\t\t\t// Wait for Adobe Document Services PDF Embed API to be ready\r\n\t\t\t\tdocument.addEventListener('adobe_dc_view_sdk.ready', () => resolve());\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.adobeDCView = undefined;\r\n\t}\r\n\r\n\tready() {\r\n\t\treturn this.readyPromise;\r\n\t}\r\n\r\n\tpreviewFile(divId, viewerConfig, attributes, pebAPIKey) {\r\n\t\tconst { file } = attributes;\r\n\r\n\t\tconst defaultConfig = { clientId: pebAPIKey };\r\n\t\tif (divId) { // Optional only for Light Box embed mode\r\n\t\t\tdefaultConfig.divId = divId;\r\n\t\t}\r\n\r\n\t\t// Initialize the AdobeDC View object\r\n\t\tthis.adobeDCView = new window.AdobeDC.View(defaultConfig);\r\n\r\n\t\t// Invoke the file preview API on Adobe DC View object\r\n\t\tconst previewFilePromise = this.adobeDCView.previewFile({\r\n\t\t\tcontent: {\r\n\t\t\t\t// Location of file where it is hosted\r\n\t\t\t\tlocation: {\r\n\t\t\t\t\turl: file.url,\r\n\t\t\t\t\t// If the file URL requires some additional headers, then it can be passed as follows:-\r\n\t\t\t\t\t// headers: [ { key: '<HEADER_KEY>', value: '<HEADER_VALUE>' } ]\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tmetaData: {\r\n\t\t\t\tfileName: file.title || ' ',\r\n\t\t\t\tid: file.id?.toString()\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tshowDownloadPDF: false, // If true, a download button appears in the overflow menu on the top bar\r\n\t\t\tshowPrintPDF: false, // If true, then a print PDF option appears in the overflow menu on the top bar\r\n\t\t\tshowFullScreen: true, // If true, a full screen button appears. (Only for `SIZED_CONTAINER` embedMode)\r\n\t\t\t// https://developer.adobe.com/document-services/docs/overview/pdf-embed-api/howtos/#embed-modes\r\n\r\n\t\t\t...viewerConfig\r\n\t\t});\r\n\r\n\t\treturn previewFilePromise;\r\n\t}\r\n}\r\nexport default ViewSDKClient;","import { useEffect } from 'react';\r\n\r\nimport ViewSDKClient from '../ViewSDKClient';\r\n\r\nconst SizedContainer = ({ attributes, clientId, pebAPIKey }) => {\r\n\tuseEffect(() => {\r\n\t\tconst viewSDKClient = new ViewSDKClient();\r\n\r\n\t\tviewSDKClient.ready().then(() => {\r\n\t\t\tviewSDKClient.previewFile(`pebPDFArea-${clientId}`, { embedMode: 'SIZED_CONTAINER' }, attributes, pebAPIKey);\r\n\t\t});\r\n\t}, []);\r\n\r\n\treturn <div className='pebSizedContainer' id={`pebPDFArea-${clientId}`}></div>\r\n}\r\nexport default SizedContainer;","import { useEffect } from 'react';\r\n\r\nimport ViewSDKClient from '../ViewSDKClient';\r\n\r\nconst InLine = ({ attributes, clientId, pebAPIKey }) => {\r\n\tuseEffect(() => {\r\n\t\tconst viewSDKClient = new ViewSDKClient();\r\n\r\n\t\tviewSDKClient.ready().then(() => {\r\n\t\t\tviewSDKClient.previewFile(`pebPDFArea-${clientId}`, { embedMode: 'IN_LINE' }, attributes, pebAPIKey);\r\n\t\t});\r\n\t}, []);\r\n\r\n\treturn <div className='pebInLine' id={`pebPDFArea-${clientId}`}></div>\r\n}\r\nexport default InLine;","import SizedContainer from './Modes/SizedContainer';\nimport InLine from './Modes/InLine';\n\nconst PDFEmbed = ({ attributes, clientId, pebAPIKey }) => {\n\tconst { config } = attributes;\n\n\treturn <div className='pebPDFEmbed'>\n\t\t{'SIZED_CONTAINER' === config?.embedMode && <SizedContainer attributes={attributes} clientId={clientId} pebAPIKey={pebAPIKey} />}\n\n\t\t{'IN_LINE' === config?.embedMode && <InLine attributes={attributes} clientId={clientId} pebAPIKey={pebAPIKey} />}\n\t</div>;\n}\nexport default PDFEmbed;","import { render } from 'react-dom';\n\nimport './style.scss';\nimport Style from './Style';\nimport PDFEmbed from './PDFEmbed';\n\n// PDF Embed\ndocument.addEventListener('DOMContentLoaded', () => {\n\tconst allPDFEmbed = document.querySelectorAll('.wp-block-peb-pdf-embed');\n\tallPDFEmbed.forEach(pdfEmbed => {\n\t\tconst { attributes, pebAPIKey } = JSON.parse(pdfEmbed.dataset.props);\n\t\tconst { cId, file } = attributes;\n\n\t\tpebAPIKey && file?.url && render(<>\n\t\t\t<Style attributes={attributes} clientId={cId} />\n\n\t\t\t<PDFEmbed attributes={attributes} clientId={cId} pebAPIKey={pebAPIKey} />\n\t\t</>, pdfEmbed);\n\n\t\tpdfEmbed?.removeAttribute('data-props');\n\t});\n});"],"names":["ReactDOM","attributes","clientId","alignment","width","height","dangerouslySetInnerHTML","__html","React","ViewSDKClient","this","readyPromise","Promise","resolve","window","AdobeDC","document","addEventListener","adobeDCView","undefined","divId","viewerConfig","pebAPIKey","file","defaultConfig","View","previewFilePromise","previewFile","content","location","url","metaData","fileName","title","id","toString","showDownloadPDF","showPrintPDF","showFullScreen","useEffect","viewSDKClient","ready","then","embedMode","className","config","querySelectorAll","forEach","pdfEmbed","JSON","parse","dataset","props","cId","render","removeAttribute"],"sourceRoot":""}